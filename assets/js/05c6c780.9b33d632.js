"use strict";(self.webpackChunkfhsdocs=self.webpackChunkfhsdocs||[]).push([[319],{7207:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var a=n(4848),i=n(8453);const r={title:"FRAMID Transformation",unlisted:!1,authors:["qiushan"],tags:["R","framid"],hide_table_of_contents:!0,date:new Date("2023-05-28T00:00:00.000Z")},o=void 0,d={permalink:"/blog/2023/05/28/get-framid",source:"@site/blog/2023/05-28-get-framid.md",title:"FRAMID Transformation",description:"FRAMID transformation",date:"2023-05-28T00:00:00.000Z",tags:[{label:"R",permalink:"/blog/tags/r"},{label:"framid",permalink:"/blog/tags/framid"}],hasTruncateMarker:!0,authors:[{name:"Qiushan Tao",title:"FHS-BAP Data Core",imageURL:"/img/datacore/qt01_avatar.png",key:"qiushan"}],frontMatter:{title:"FRAMID Transformation",unlisted:!1,authors:["qiushan"],tags:["R","framid"],hide_table_of_contents:!0,date:"2023-05-28T00:00:00.000Z"},unlisted:!1,prevItem:{title:"BROC Data Query Tutorial",permalink:"/blog/2023/10/25/data-query-tutorial"}},s={authorsImageUrls:[void 0]},c=[];function l(t){const e={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,i.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.admonition,{title:"summary",type:"tip",children:[(0,a.jsx)("code",{children:"FRAMID transformation"}),(0,a.jsx)(e.p,{children:"This is an R code to obtain the 'framid' given the 'idtype' and 'id' are known."})]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-r",metastring:'title="get_framid.r"',children:'#####################################################################\n#  License      : This source code is licensed under the MIT license.\n#  Author(s)    : FHS-BAP data core (QT).\n#  Release date : TBA\n#  Description  : Get the framid from IDTYPE and ID in FHS Data. \n#  Usage        : library(dplyr)\n#               : data <- data %>%\n#               :     dplyr::mutate(framid = get_framid(idtype, id)\n#####################################################################\n\nget_framid <- function(idtype, id) {\n    if (!((length(idtype) == 1 & length(id) >= 1) | \n          (length(idtype) ==     length(id)     ))) \n         stop("Error: the length of idtype and id did not match!")\n    \n    # mapping framid to idtype\n    id_matrix <- data.frame(\n        idtype        = c(0, 1, 2, 3, 7, 72), \n        adjust_factor = c(0, 80000, 20000, 30000, 700000, 720000)\n    )\n    \n    x <- merge(data.frame(idtype = idtype, id = id), \n               id_matrix, by = "idtype", all.x = TRUE)\n    return(x$id + x$adjust_factor)\n}\n'})})]})}function m(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(l,{...t})}):l(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>o,x:()=>d});var a=n(6540);const i={},r=a.createContext(i);function o(t){const e=a.useContext(r);return a.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function d(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:o(t.components),a.createElement(r.Provider,{value:e},t.children)}}}]);