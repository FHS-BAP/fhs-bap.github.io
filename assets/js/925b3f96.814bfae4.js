"use strict";(self.webpackChunkfhsdocs=self.webpackChunkfhsdocs||[]).push([[8609],{5026:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>d,default:()=>c,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var n=i(4848),a=i(8453);const s={slug:"first-blog-post",title:"First Blog Post",authors:{name:"Gao Wei",title:"Docusaurus Core Team",url:"https://github.com/wgao19",image_url:"https://github.com/wgao19.png"},tags:["hola","docusaurus"]},d=void 0,r={permalink:"/blog/first-blog-post",source:"@site/blog/2019-05-28-first-blog-post.md",title:"First Blog Post",description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet",date:"2019-05-28T00:00:00.000Z",formattedDate:"May 28, 2019",tags:[{label:"hola",permalink:"/blog/tags/hola"},{label:"docusaurus",permalink:"/blog/tags/docusaurus"}],readingTime:3.215,hasTruncateMarker:!1,authors:[{name:"Gao Wei",title:"Docusaurus Core Team",url:"https://github.com/wgao19",image_url:"https://github.com/wgao19.png",imageURL:"https://github.com/wgao19.png"}],frontMatter:{slug:"first-blog-post",title:"First Blog Post",authors:{name:"Gao Wei",title:"Docusaurus Core Team",url:"https://github.com/wgao19",image_url:"https://github.com/wgao19.png",imageURL:"https://github.com/wgao19.png"},tags:["hola","docusaurus"]},unlisted:!1,prevItem:{title:"Long Blog Post",permalink:"/blog/long-blog-post"}},o={authorsImageUrls:[void 0]},l=[{value:"this is a R hiligthing test",id:"this-is-a-r-hiligthing-test",level:2},{value:"this is a jsx hiligthing test",id:"this-is-a-jsx-hiligthing-test",level:2},{value:"this is a python hiligthing test",id:"this-is-a-python-hiligthing-test",level:2},{value:"this is a sas hiligthing test",id:"this-is-a-sas-hiligthing-test",level:2},{value:"this is a bash hiligthing test",id:"this-is-a-bash-hiligthing-test",level:2}];function h(t){const e={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"}),"\n",(0,n.jsx)(e.h2,{id:"this-is-a-r-hiligthing-test",children:"this is a R hiligthing test"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-r",children:'#####################################################################\n#  License      : This source code is licensed under the MIT license.\n#  Author(s)    : FHS-BAP data core (QT).\n#  Release date : TBA\n#  Description  : Get the framid from IDTYPE and ID in FHS Data. \n#  Usage        : library(dplyr)\n#               : data <- data %>%\n#               :     dplyr::mutate(framid = get_framid(idtype, id)\n#####################################################################\n\nget_framid <- function(idtype, id) {\n    if (!((length(idtype) == 1 & length(id) >= 1) | \n          (length(idtype) ==     length(id)     ))) \n         stop("Error: the length of idtype and id did not match!")\n    \n    # mapping framid to idtype\n    id_matrix <- data.frame(\n        idtype        = c(0, 1, 2, 3, 7, 72), \n        adjust_factor = c(0, 80000, 20000, 30000, 700000, 720000)\n    )\n    \n    x <- merge(data.frame(idtype = idtype, id = id), \n               id_matrix, by = "idtype", all.x = TRUE)\n    return(x$id + x$adjust_factor)\n}\n \n'})}),"\n",(0,n.jsx)(e.h2,{id:"this-is-a-jsx-hiligthing-test",children:"this is a jsx hiligthing test"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-jsx",children:'#####################################################################\n#  License      : This source code is licensed under the MIT license.\n#  Author(s)    : FHS-BAP data core (QT).\n#  Release date : TBA\n#  Description  : Get the framid from IDTYPE and ID in FHS Data. \n#  Usage        : library(dplyr)\n#               : data <- data %>%\n#               :     dplyr::mutate(framid = get_framid(idtype, id)\n#####################################################################\n\nget_framid <- function(idtype, id) {\n    if (!((length(idtype) == 1 & length(id) >= 1) | \n          (length(idtype) ==     length(id)     ))) \n         stop("Error: the length of idtype and id did not match!")\n    \n    # mapping framid to idtype\n    id_matrix <- data.frame(\n        idtype        = c(0, 1, 2, 3, 7, 72), \n        adjust_factor = c(0, 80000, 20000, 30000, 700000, 720000)\n    )\n    \n    x <- merge(data.frame(idtype = idtype, id = id), \n               id_matrix, by = "idtype", all.x = TRUE)\n    return(x$id + x$adjust_factor)\n}\n \n'})}),"\n",(0,n.jsx)(e.h2,{id:"this-is-a-python-hiligthing-test",children:"this is a python hiligthing test"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:'#####################################################################\n#  License      : This source code is licensed under the MIT license.\n#  Author(s)    : FHS-BAP data core (QT).\n#  Release date : TBA\n#  Description  : Get the framid from IDTYPE and ID in FHS Data. \n#  Usage        : library(dplyr)\n#               : data <- data %>%\n#               :     dplyr::mutate(framid = get_framid(idtype, id)\n#####################################################################\n\nget_framid <- function(idtype, id) {\n    if (!((length(idtype) == 1 & length(id) >= 1) | \n          (length(idtype) ==     length(id)     ))) \n         stop("Error: the length of idtype and id did not match!")\n    \n    # mapping framid to idtype\n    id_matrix <- data.frame(\n        idtype        = c(0, 1, 2, 3, 7, 72), \n        adjust_factor = c(0, 80000, 20000, 30000, 700000, 720000)\n    )\n    \n    x <- merge(data.frame(idtype = idtype, id = id), \n               id_matrix, by = "idtype", all.x = TRUE)\n    return(x$id + x$adjust_factor)\n}\n'})}),"\n",(0,n.jsx)(e.h2,{id:"this-is-a-sas-hiligthing-test",children:"this is a sas hiligthing test"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-sas",children:'#####################################################################\n#  License      : This source code is licensed under the MIT license.\n#  Author(s)    : FHS-BAP data core (QT).\n#  Release date : TBA\n#  Description  : Get the framid from IDTYPE and ID in FHS Data. \n#  Usage        : library(dplyr)\n#               : data <- data %>%\n#               :     dplyr::mutate(framid = get_framid(idtype, id)\n#####################################################################\n\nget_framid <- function(idtype, id) {\n    if (!((length(idtype) == 1 & length(id) >= 1) | \n          (length(idtype) ==     length(id)     ))) \n         stop("Error: the length of idtype and id did not match!")\n    \n    # mapping framid to idtype\n    id_matrix <- data.frame(\n        idtype        = c(0, 1, 2, 3, 7, 72), \n        adjust_factor = c(0, 80000, 20000, 30000, 700000, 720000)\n    )\n    \n    x <- merge(data.frame(idtype = idtype, id = id), \n               id_matrix, by = "idtype", all.x = TRUE)\n    return(x$id + x$adjust_factor)\n}\n \n'})}),"\n",(0,n.jsx)(e.h2,{id:"this-is-a-bash-hiligthing-test",children:"this is a bash hiligthing test"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-bash",children:"#####################################################################\n#  License      : This source code is licensed under the MIT license.\n#  Author(s)    : FHS-BAP data core (QT).\n#  Release date : TBA\n#  Description  : Get the framid from IDTYPE and ID in FHS Data. \n#  Usage        : library(dplyr)\n#               : data <- data %>%\n#               :     dplyr::mutate(framid = get_framid(idtype, id)\n#####################################################################\n\nsudo apt update\nmkdir website\ncd website\nyarn start --port 4000\n"})})]})}function c(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(h,{...t})}):h(t)}},8453:(t,e,i)=>{i.d(e,{R:()=>d,x:()=>r});var n=i(6540);const a={},s=n.createContext(a);function d(t){const e=n.useContext(s);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:d(t.components),n.createElement(s.Provider,{value:e},t.children)}}}]);